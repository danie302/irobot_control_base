<launch>

    <!-- TF Sensor static transformer publisher -->
  <node pkg="tf" type="static_transform_publisher" name="lidar_broadcaster" args="0 0 0 0 0 0 1 base_link laser 100" />
  
  <!-- iRobotControl Node 
  <node name="iRobotControl"          pkg="irobot_control_base"  type="iRobotControl.py" output="screen">
  </node>
  -->
  <!-- RpLidar Receiver Node -->
  <node name="rpLidarRecNode"          pkg="irobot_control_base"  type="laserDataReceiver.py" output="screen">
  </node>
  <!-- Odom Receiver Node -->
  <node name="odomRecNode"          pkg="irobot_control_base"  type="odomDataReceiver.py" output="screen">
  </node>
    <!-- tf Receiver Node -->
  <node name="tfRecNode"          pkg="irobot_control_base"  type="tfDataReceiver.py" output="screen">
  </node>
  <!-- tf_static Receiver Node -->
  <node name="tfStaticRecNode"          pkg="irobot_control_base"  type="tfStaticDataReceiver.py" output="screen">
  </node>
  <!-- Robot description -->
  <arg name="config" default="$(find ca_driver)/config/default.yaml"/>
  <arg name="desc" default="true"/>
  <include if="$(arg desc)" file="$(find ca_description)/launch/create_2.launch"/>
  <!-- Slam Gmapping Node -->
  <node name="slamNode"          pkg="gmapping"  type="slam_gmapping" output="screen">
    <param name="odom_frame" type="string" value="odom" />
    <param name="map_update_interval" value="2.0"/>
    <param name="xmin" value="-10"/>
    <param name="xmax" value="10"/>
    <param name="ymin" value="-10"/>
    <param name="ymax" value="10"/>
    <param name="delta" value="0.09"/>
  </node>
  <!-- Kalman filter Node -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se" clear_params="true">
    <rosparam command="load" file="$(find robot_localization)/params/ekfslam.yaml" />
  </node> 
    <!--  Placeholder for output topic remapping
    <remap from="odometry/filtered" to=""/>
    <remap from="accel/filtered" to=""/>
    -->

  <!-- MapMatrix 
  <node name="mapMatrix"          pkg="irobot_control_base"  type="mapMatrix.py" output="screen">
  </node>
  -->
  <node pkg="move_base" type="move_base" name="move_base" output = "screen">
     <param name="controller_frequency" value="10.0"/>
        <rosparam file="$(find irobot_control_base)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find irobot_control_base)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find irobot_control_base)/config/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find irobot_control_base)/config/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find irobot_control_base)/config/trajectory_planner.yaml" command="load" />
  </node> 
  <node pkg="frontier_exploration" type="explore_client" name="explore_client" output="screen"/>

  <node pkg="frontier_exploration" type="explore_server" name="explore_server" output="screen">
      <param name="frequency" type="double" value="1.0"/>
      <param name="goal_aliasing" type="double" value="0.5"/>
      <rosparam ns="explore_costmap" subst_value="true" file="$(find irobot_control_base)/config/exploration.yaml" command="load" />
  </node>
  <!-- iRobotVel Node -->
  <node name="iRobotVel"          pkg="irobot_control_base"  type="iRobotVel.py" output="screen">
  </node>
</launch>
